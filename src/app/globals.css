@import 'tailwindcss';

:root {
  /* Light Mode Defaults */
  --background: #ffffff; /* White */
  --foreground: #111827; /* Gray 900 */
  --card-bg: #ffffff; /* White */
  --card-border: #e5e7eb; /* Gray 200 */
  --input-bg: #ffffff; /* White */
  --input-border: #d1d5db; /* Gray 300 */
  --primary: #4f46e5; /* Indigo 600 */
  --primary-foreground: #ffffff; /* White */
  --secondary: #f3f4f6; /* Gray 100 */
  --secondary-foreground: #1f2937; /* Gray 800 */
  --accent: #a855f7; /* Purple 500 */
  --accent-foreground: #ffffff; /* White */

  /* Variables for shared dark mode backgrounds */
  --dark-gradient-base: radial-gradient(
    ellipse at top left,
    #050505 70%,
    #14532d 100%
  );
  --dark-gradient-accent: radial-gradient(
    circle at bottom right,
    #415314 0%,
    transparent 60%
  );
}

.dark {
  /* Dark Mode Overrides */
  --background: #000000; /* Black background */
  --foreground: #f9fafb; /* Gray 50 */
  --card-bg: #111827; /* Gray 900 */
  --card-border: #374151; /* Gray 700 */
  --input-bg: #1f2937; /* Gray 800 */
  --input-border: #4b5563; /* Gray 600 */
  --primary: #6366f1; /* Indigo 500 */
  --primary-foreground: #ffffff; /* White */
  --secondary: #1f2937; /* Gray 800 */
  --secondary-foreground: #e5e7eb; /* Gray 200 */
  --accent: #c084fc; /* Purple 400 */
  --accent-foreground: #111827; /* Gray 900 */
  color-scheme: dark; /* Set color scheme for dark mode */
}

@theme {
  /* Make semantic variables available to Tailwind */
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card-bg);
  --color-card-foreground: var(--foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);

  /* Keep existing font definitions */
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);

  /* Keep existing explicit color definitions if needed for specific utils */
  --color-white: #ffffff;
  --color-black: #000000;
  --color-gray-50: #f9fafb;
  --color-gray-100: #f3f4f6;
  --color-gray-200: #e5e7eb;
  --color-gray-300: #d1d5db;
  --color-gray-400: #9ca3af;
  --color-gray-500: #6b7280;
  --color-gray-600: #4b5563;
  --color-gray-700: #374151;
  --color-gray-800: #1f2937;
  --color-gray-900: #111827;
  --color-indigo-50: #eef2ff;
  --color-indigo-100: #e0e7ff;
  --color-indigo-200: #c7d2fe;
  --color-indigo-300: #a5b4fc;
  --color-indigo-400: #818cf8;
  --color-indigo-500: #6366f1;
  --color-indigo-600: #4f46e5;
  --color-indigo-700: #4338ca;
  --color-indigo-800: #3730a3;
  --color-indigo-900: #312e81;
  --color-purple-50: #faf5ff;
  --color-purple-100: #f3e8ff;
  --color-purple-200: #e9d5ff;
  --color-purple-300: #d8b4fe;
  --color-purple-400: #c084fc;
  --color-purple-500: #a855f7;
  --color-purple-600: #9333ea;
  --color-purple-700: #7e22ce;
  --color-purple-800: #6b21a8;
  --color-purple-900: #581c87;
}

@layer base {
  html {
    @apply scroll-smooth;
    color-scheme: light; /* Default to light */
  }
  html.dark {
    color-scheme: dark; /* Set color scheme for dark mode */
  }

  body {
    /* Use semantic variables for base background/text */
    @apply bg-background text-foreground font-sans min-h-screen transition-colors duration-200;
  }

  /* Dark mode card styling */
  html.dark .bg-card {
    background-color: rgba(17, 24, 39, 0.7);
    backdrop-filter: blur(8px);
    border-color: rgba(255, 255, 255, 0.1);
  }

  /* Make specific backgrounds transparent in dark mode */
  html.dark .bg-background {
    background-color: transparent;
  }

  /* Only apply this styling when there's no custom gradient background applied */
  html.dark .bg-secondary:not([class*='dark:bg-\\[']) {
    background-color: rgba(15, 23, 42, 0.3);
    backdrop-filter: blur(4px);
  }

  /* Ensure dark mode footer styling */
  html.dark footer.bg-card {
    background-color: rgba(17, 24, 39, 0.9);
    backdrop-filter: blur(10px);
  }

  /* Apply custom styling to card elements in dark mode */
  html.dark .card,
  html.dark div.bg-card {
    background-color: rgba(17, 24, 39, 0.7);
    backdrop-filter: blur(8px);
    border-color: rgba(255, 255, 255, 0.1);
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply font-bold;
  }

  h1 {
    @apply text-4xl md:text-5xl;
  }

  h2 {
    @apply text-3xl md:text-4xl;
  }

  h3 {
    @apply text-2xl md:text-3xl;
  }

  h4 {
    @apply text-xl md:text-2xl;
  }

  h5 {
    @apply text-lg md:text-xl;
  }

  h6 {
    @apply text-base md:text-lg;
  }

  a {
    @apply transition-all duration-300;
  }
}

@layer components {
  .container {
    @apply px-4 mx-auto;
    max-width: 1280px;
  }

  .btn {
    @apply inline-block px-6 py-3 rounded-full font-medium transition duration-300;
  }

  .btn-primary {
    background-color: var(--primary);
    color: var(--primary-foreground);
    @apply hover:opacity-90;
  }

  .btn-secondary {
    background-color: var(--secondary);
    color: var(--secondary-foreground);
    border-width: 1px;
    border-color: var(--card-border);
    @apply hover:bg-gray-200 dark:hover:bg-gray-700;
  }

  .btn-outline {
    background-color: transparent;
    color: var(--foreground); /* Black text in light mode */
    border-width: 1px;
    border-color: var(--primary);
    @apply hover:bg-primary/10;
  }

  html.dark .btn-outline {
    color: var(--primary-foreground); /* White text in dark mode */
  }

  .btn-accent {
    background-color: var(--accent);
    color: var(--accent-foreground);
    @apply hover:opacity-90;
  }

  .card {
    background-color: var(--card-bg);
    color: var(--foreground);
    border-width: 1px;
    border-color: var(--card-border);
    @apply rounded-lg shadow-md overflow-hidden;
  }

  .section {
    @apply py-16 md:py-24;
  }

  .section-title {
    color: var(--foreground);
    @apply text-3xl md:text-4xl font-bold text-center mb-12;
  }

  /* Custom class for expertise section background */
  .expertise-bg {
    background-color: white !important;
  }
  /* Ensure expertise section uses main background in dark mode */
  html.dark .expertise-bg {
    background-color: var(--background) !important;
  }

  /* Custom class for work section background */
  .work-bg {
    background-color: white !important;
  }

  html.dark .work-bg {
    background-color: var(--background) !important;
  }

  /* Custom class for hero section background */
  .hero-bg {
    background-color: white !important;
  }

  /* Text color in light mode hero section */
  .hero-bg h1,
  .hero-bg h2,
  .hero-bg p,
  .hero-bg a:not(.bg-primary) {
    color: var(--foreground) !important;
  }

  /* Ensure hero section uses main background in dark mode */
  html.dark .hero-bg {
    /* background: var(--dark-gradient-base); */
    background-color: black !important;
  }

  /* Text color in dark mode hero section */
  html.dark .hero-bg h1,
  html.dark .hero-bg h2,
  html.dark .hero-bg p,
  html.dark .hero-bg a:not(.bg-primary) {
    color: var(--primary-foreground) !important;
  }

  .form-input {
    background-color: var(--input-bg);
    border-color: var(--input-border);
    color: var(--foreground);
    @apply w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent outline-none transition-colors;
  }

  .form-label {
    color: var(--foreground);
    @apply block mb-2;
  }
}

@layer utilities {
  .text-gradient {
    @apply bg-clip-text text-transparent bg-gradient-to-r from-indigo-500 to-purple-500;
  }

  .bg-gradient {
    @apply bg-gradient-to-r from-indigo-600 to-purple-600;
  }

  .shadow-smooth {
    @apply shadow-lg dark:shadow-xl dark:shadow-black/30;
  }

  .transition-default {
    @apply transition duration-300 ease-in-out;
  }

  @keyframes marquee {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  .animate-marquee {
    animation: marquee 15s linear infinite;
  }

  @keyframes orbit-clockwise {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes orbit-counter-clockwise {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(-360deg);
    }
  }

  .animate-orbit-cw {
    animation: orbit-clockwise 40s linear infinite;
  }

  .animate-orbit-ccw {
    animation: orbit-counter-clockwise 50s linear infinite;
  }

  .orbit-item-cw {
    animation: orbit-counter-clockwise 40s linear infinite;
    z-index: 30;
  }
  .orbit-item-ccw {
    animation: orbit-clockwise 50s linear infinite;
    z-index: 30;
  }

  /* Ensure orbit elements are visible in dark mode */
  html.dark .orbit-item-cw,
  html.dark .orbit-item-ccw {
    z-index: 30;
  }

  @keyframes glow-pulse {
    0% {
      opacity: 0.7;
      text-shadow: 0 0 2px var(--primary);
    }
    50% {
      opacity: 1;
      text-shadow: 0 0 15px var(--primary), 0 0 5px var(--primary);
    }
    100% {
      opacity: 0.7;
      text-shadow: 0 0 2px var(--primary);
    }
  }

  .glow-animation {
    animation: glow-pulse 2s infinite ease-in-out;
    color: var(--primary);
  }
}

/* Dark mode profile avatar with black-me.png */
html.dark #profile-avatar {
  background-image: url('/black-me.png');
  background-size: cover;
  background-position: center;
}

/* Light mode profile avatar with white-me.png */
#profile-avatar {
  background-image: url('/white-me.png');
  background-size: cover;
  background-position: center;
}

/* Experience orbit section for full visibility */
.experience-orbit-section {
  z-index: 20;
  background-color: white !important;
}

html.dark .experience-orbit-section {
  background-color: black !important;
}

@media (min-width: 768px) {
  .experience-orbit-section {
  }
}

.experience-orbit-section > * {
}
